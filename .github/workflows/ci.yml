name: CI/CD React Component

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Prevent concurrent runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]  # Test on multiple Node versions
      fail-fast: false  # Continue testing other versions if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for semantic-release versioning

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          PNPM_CACHE_FOLDER: ~/.pnpm-store

      - name: Run lint
        run: pnpm run lint --if-present
        continue-on-error: false

      - name: Run tests
        run: pnpm test --if-present
        env:
          CI: true

      - name: Build component
        run: pnpm run build --if-present

      - name: Build Storybook
        run: pnpm run build-storybook --if-present

      - name: Upload Storybook artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.node-version == env.NODE_VERSION
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/
          retention-days: 1
          compression-level: 6

  publish-storybook:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write  # Required for Cloudflare Pages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Wrangler
        run: npm install -g wrangler@latest

      - name: Publish to Cloudflare Pages
        run: wrangler pages publish storybook-static/ --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  publish-npm:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for semantic-release to create tags
      id-token: write  # Required for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          PNPM_CACHE_FOLDER: ~/.pnpm-store

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: false
          branches: main
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: v${{ steps.semantic-release.outputs.new_release_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}